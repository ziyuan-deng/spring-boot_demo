server:
  port: 8080
#139.159.187.136  6400  maiyue_123!@#
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test?characterEncoding=utf-8&serverTimezone=GMT%2B8
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 1000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,log4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    logSlowSql: true
  druid:
    login:
      username:  admin
      password:  123456
  #json时间格式配置
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  #redis配置
  redis:
    database: 0
    host: 192.168.106.101
    port: 6379
    password:
    jedis:
      pool:
        max-idle: 8
        max-wait: 3000
        max-active: 8
        min-idle: 0
    timeout: 5000

  #rabbimq配置
  rabbitmq:
    virtual-host: /
    host: 192.168.106.101
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        concurrency: 10
        max-concurrency: 20
        prefetch: 50
  #quautz参数配置
  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: quartzScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: false
            clusterCheckinInterval: 10000
            useProperties: false

          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
    job-store-type: jdbc
    jdbc:
      initialize-schema: never

#mq.env=local

mybatis:
  config-location: classpath:/mybatis/sqlConfig.xml
  mapper-locations: classpath*:mybatis/task/*.xml

jwt:
  # 密匙KEY
  secret: JWTSecret
  # HeaderKEY
  tokenHeader: Authorization
  # Token前缀字符
  tokenPrefix: Sans-
  # 过期时间 单位秒 1天后过期=86400 7天后过期=604800
  expiration: 86400
  # 配置不需要认证的接口
  antMatchers: /index/**,/login/**,/favicon.ico

#基础测试队列有关设置
#basic.info.mq.exchange.name = local.basic.info.mq.exchange
#basic.info.mq.routing.key.name = local.basic.info:mq.routing.key
#basic.info.mq.queue.name = local.basic.info.mq.queue
basic:
  info:
    mq:
      exchange:
        name: local.basic.info.mq.exchange
      routing:
        key:
          name: local.basic.info:mq.routing.key
      queue:
        name: local.basic.info.mq.queue

# product.robbing.mq.exchange.name=${mq.env}:product:robbing:mq:exchange
# product.robbing.mq.routing.key.name=${mq.env}:product:robbing:mq:routing:key
# product.robbing.mq.queue.name=${mq.env}:product:robbing:mq:queue
product:
  robbing:
    mq:
      exchange:
        name: local.product.robbing.mq.exchange
      routing:
        key:
          name: local.product.robbing.mq.routing.key
      queue:
        name: local.product.robbing.mq.queue

 # simple.mq.queue.name=${mq.env}.simple.mq.queue
 # simple.mq.exchange.name=${mq.env}.simple.mq.exchange
 # simple.mq.routing.key.name=${mq.env}.simple.mq.routing.key
simple:
  mq:
    queue:
      name: local.simple.mq.queue
    exchange:
      name: local.simple.mq.exchange
    routing:
      key:
        name: local.simple.mq.routing.key